#pragma once

#include "ObjectTypes.h"

namespace TES3 {
	enum MagicSchools {
		AlterationSchool,
		ConjurationSchool,
		DestructionSchool,
		IllusionSchool,
		MysticismSchool,
		RestorationSchool,
		FirstMagicSchool = AlterationSchool,
		LastMagicSchool = RestorationSchool
	};

	enum MagicEffectFlags
	{
		TargetSkill = 0x1,
		TargetAttribute = 0x2,
		NoDuration = 0x4,
		NoMagnitude = 0x8,
		Harmful = 0x10,
		ContinuousVfx = 0x20,
		CastSelf = 0x40,
		CastTouch = 0x80,
		CastTarget = 0x100,
		Spellmaking = 0x200,
		Enchanting = 0x400,
		NegativeLighting = 0x800,
		AppliedOnce = 0x1000,
		StealthEffect = 0x2000,
		NonRecastable = 0x4000,
		IllegalDaedra = 0x8000,
		Unreflectable = 0x10000,
		CasterLinked = 0x20000,
		NoMagicEffectFlags = 0,
		AllMagicEffectFlags = (TargetSkill | TargetAttribute | NoDuration | NoMagnitude |
		Harmful | ContinuousVfx | CastSelf | CastTouch | CastTarget | Spellmaking |
			Enchanting | NegativeLighting | AppliedOnce | StealthEffect | NonRecastable |
			IllegalDaedra | Unreflectable | CasterLinked)
	};

	int const MagicEffectFlagMap[] = {
		0x11c8, 0x11c0, 0x11c8, 0x11e0, 0x11e0, 0x11e0, 0x11e0, 0x11d0,
		0x11c0, 0x11c0, 0x11e0, 0x11c0, 0x11184, 0x11184, 0x1f0, 0x1f0,
		0x1f0, 0x11d2, 0x11f0, 0x11d0, 0x11d0, 0x11d1, 0x1d2, 0x1f0,
		0x01d0, 0x1d0, 0x1d1, 0x1f0, 0x11d0, 0x11d0, 0x11d0, 0x11d0,
		0x11d0, 0x11d0, 0x11d0, 0x11d0, 0x11d0, 0x1d0, 0x1d0, 0x11c8,
		0x31c0, 0x11c0, 0x11c0, 0x11c0, 0x1180, 0x11d8, 0x11d8, 0x11d0,
		0x11d0, 0x11180, 0x11180, 0x11180, 0x11180, 0x11180, 0x11180, 0x11180,
		0x11180, 0x11c4, 0x111b8, 0x1040, 0x104c, 0x104c, 0x104c, 0x104c,
		0x1040, 0x1040, 0x1040, 0x11c0, 0x11c0, 0x1cc, 0x1cc, 0x1cc,
		0x1cc, 0x1cc, 0x1c2, 0x1c0, 0x1c0, 0x1c0, 0x1c1, 0x11c2,
		0x11c0, 0x11c0, 0x11c0, 0x11c1, 0x11c0, 0x21192, 0x20190, 0x20190,
		0x20190, 0x21191, 0x11c0, 0x11c0, 0x11c0, 0x11c0, 0x11c0, 0x11c0,
		0x11c0, 0x11c0, 0x11c0, 0x11c0, 0x1c0, 0x11190, 0x9048, 0x9048,
		0x9048, 0x9048, 0x9048, 0x9048, 0x9048, 0x9048, 0x9048, 0x9048,
		0x9048, 0x9048, 0x9048, 0x9048, 0x9048, 0x11c0, 0x1180, 0x1180,
		0x5048, 0x5048, 0x5048, 0x5048, 0x5048, 0x5048, 0x1188, 0x5048,
		0x5048, 0x5048, 0x5048, 0x5048, 0x1048, 0x104c, 0x1048, 0x40,
		0x11c8, 0x1048, 0x1048, 0x1048, 0x1048, 0x1048, 0x1048
	};

	struct MagicEffect_vTable {

	};

	struct MagicEffect {
		void * vTable; // 0x00
		ObjectType::ObjectType objectType; // 0x04 // "MGEF"
		int unknown_0x08; // 0x08
		void * unknown_0x0C; // 0x0C // Pointer to first array element?
		mwLong skill; // 0x10
		mwLong attribute; // 0x14
		mwLong specialization; // 0x18
		char icon[32]; // 0x1C
		char particleTexture[32]; // 0x3C
								  // Only a few effects have data in their sound effect strings.
								  // Maybe it's inferred from school if missing?
		char castSoundEffect[32]; // 0x5C
		char boltSoundEffect[32]; // 0x7C
		char hitSoundEffect[32]; // 0x9C
		char areaSoundEffect[32]; // 0xBC
		void * unknown_0xDC; // Visual effect?
		void * unknown_0xE0; // Visual effect?
		void * unknown_0xE4; // Visual effect?
		void * unknown_0xE8; // Visual effect?
		MagicSchools school; // 0xEC
		mwFloat baseMagickaCost; // 0xF0
		mwLong flags; // 0xF4 // 0x200 = spellmaking, 0x400 = enchanting, 0x800 = negative lighting effect
		mwLong lightingRed; // 0xF8
		mwLong lightingGreen; // 0xFC
		mwLong lightingBlue; // 0x0100
		mwFloat size; // 0x0104
		mwFloat speed; // 0x0108
		mwFloat sizeCap; // 0x010C
	};
	static_assert(sizeof(MagicEffect) == 0x0110, "TES3::MagicEffect failed size validation");
}
